name: Continuous integration

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gather_crates:
    runs-on: ubuntu-latest
    outputs:
      members: ${{ steps.cargo-metadata.outputs.members }}
    steps:
      - uses: actions/checkout@v3

      - id: cargo-metadata
        run: |
          WORKSPACE_MEMBERS=$(cargo metadata --format-version=1 --no-deps | jq -c '.packages | .[] | select(.publish == null) | .name' | jq -s '.' | jq -c '.')
          echo "members=${WORKSPACE_MEMBERS}" >> $GITHUB_OUTPUT

  test:
    name: Test ${{ matrix.crate }}
    runs-on: ubuntu-latest
    needs: gather_crates
    strategy:
      fail-fast: false
      matrix:
        crate: ${{ fromJSON(needs.gather_crates.outputs.members) }}
    steps:
      - uses: actions/checkout@v3

      - uses: r7kamura/rust-problem-matchers@d58b70c4a13c4866d96436315da451d8106f8f08 #v1.3.0

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1
        with:
          shared-key: stable-cache
          save-if: false

      - name: Run all tests
        run: cargo test --package ${{ matrix.crate }} --all-features

      - name: Check if we compile without any features activated
        run: cargo build --package ${{ matrix.crate }} --no-default-features

  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-version: [
          1.67.1, # current stable
        ]
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
          components: clippy

      - uses: r7kamura/rust-problem-matchers@d58b70c4a13c4866d96436315da451d8106f8f08 #v1.3.0

      - uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1
        with:
          save-if: ${{ github.ref == 'refs/heads/master' }}

      - name: Run cargo clippy
        run: cargo clippy # cargo alias to allow reuse of config locally

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - uses: r7kamura/rust-problem-matchers@d58b70c4a13c4866d96436315da451d8106f8f08 #v1.3.0

      - name: Check formatting
        run: cargo fmt -- --check
